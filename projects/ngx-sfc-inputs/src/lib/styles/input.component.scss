@import "../../../../ngx-sfc-common/src/lib/styles/styles";

:host {
  width: 100%;

  .container {
    position: relative;

    .sfc-input {
      background-color: transparent;
      border: none;
      border-bottom: 1px solid;

      @include theme-value(border-color, $color-default, $color-dark);
      @include theme-value(color, $color-default, $color-dark);

      border-radius: 0;
      outline: none;
      height: 2.4em;
      width: 100%;
      font-size: 0.8em;
      padding: 0;
      box-shadow: none;
      box-sizing: content-box;
      transition: border 0.3s, box-shadow 0.3s;
      transition: box-shadow 0.3s, border 0.3s;
      transition: box-shadow 0.3s, border 0.3s, box-shadow 0.3s;
      user-select: none;

      & + label {
        @include theme-value(color, $color-default, $color-dark);

        position: absolute;
        top: 0;
        font-size: 0.8em;
        cursor: text;
        transition: color 0.2s ease-out, transform 0.2s ease-out;
        transition: transform 0.2s ease-out, color 0.2s ease-out;
        transition: transform 0.2s ease-out, color 0.2s ease-out, transform 0.2s ease-out;
        transform-origin: 0% 100%;
        text-align: initial;
        transform: translateY(0.6em);
        left: 0;
        user-select: none;

        &::after {
          display: block;
          content: "";
          position: absolute;
          top: 100%;
          left: 0;
          opacity: 0;
          transition: 0.2s opacity ease-out, 0.2s color ease-out;
        }

        &.active {
          transform: translateY(-0.9em) scale(0.8);
          transform-origin: 0 0;
          cursor: pointer;
        }
      }
    }

    .icon {
      font-weight: normal;
      font-style: normal;
      line-height: 1;
      letter-spacing: normal;
      text-transform: none;
      display: inline-block;
      white-space: nowrap;
      word-wrap: normal;
      direction: ltr;
      -webkit-font-smoothing: antialiased;
      text-rendering: optimizelegibility;
      position: absolute;
      width: 2.4em;
      font-size: 1.3em;
      transition: color 0.2s;
      top: 0.32em;

      @include theme-value(color, $color-default, $color-dark);

      cursor: pointer;

      &:hover {
        color: $color-hover-default;
      }

      & ~ .sfc-input {
        width: calc(100% - 2.4em);
      }

      & ~ label {
        width: calc(100% - 2.4em - 1.2em);
      }

      & ~ label,
      & ~ .sfc-input {
        margin-left: 2.4em;
      }

      & ~ span.helper-text {
        margin-left: 3.2em;
      }
    }

    .helper-text {
      position: relative;
      display: inline-block;
      min-height: 0.9em;
      min-width: 1em;
      font-size: 0.6em;

      @include theme-value(color, $color-default, $color-dark);

      user-select: none;

      &::after {
        opacity: 1;
        position: absolute;
        top: 0;
        left: 0;
      }
    }
  }

  &.focus {
    .container {
      .icon {
        pointer-events: none;
        color: $color-hover-default;
      }

      .sfc-input {
        border-bottom: 1px solid $color-hover-default;
        box-shadow: 0 1px 0 0 $color-hover-default;

        & + label {
          color: $color-hover-default;
        }
      }
    }
  }

  &.disabled {
    .container {
      .icon {
        @include theme-value(color, $color-disabled-default, $color-disabled-dark);

        color: rgb(0 0 0 / 42%);
        pointer-events: none;
      }

      .sfc-input {
        @include theme-value(color, $color-disabled-default, $color-disabled-dark);
        @include theme-value(border-color, $color-disabled-default, $color-disabled-dark);

        border-bottom: 1px dotted;
      }
    }
  }

  &.has-value.ng-invalid,
  &.ng-dirty.ng-invalid {
    .container {
      .sfc-input {
        border-bottom: 1px solid $color-failed;
        box-shadow: 0 1px 0 0 $color-failed;

        &:focus {
          border-bottom: 1px solid $color-failed;
          box-shadow: 0 1px 0 0 $color-failed;

          + label {
            color: $color-failed;
          }
        }

        ~ .helper-text {
          color: $color-failed;
        }
      }

      .icon {
        color: $color-failed !important;
      }
    }
  }

  &.has-value.ng-dirty.ng-valid {
    .container {
      .sfc-input {
        border-bottom: 1px solid $color-success;
        box-shadow: 0 1px 0 0 $color-success;

        &:focus {
          border-bottom: 1px solid $color-success;
          box-shadow: 0 1px 0 0 $color-success;

          + label {
            color: $color-success;
          }
        }

        ~ .helper-text {
          color: $color-success;
        }
      }

      .icon {
        color: $color-success !important;
      }
    }
  }

  /* PLACEHOLDER */

  ::placeholder {
    @include theme-value(color, $color-5, $color-7);

    font-family: Arial, Helvetica, sans-serif;
  }

  /* END PLACEHOLDER */

  /**  SCROLL BAR */

  ::-webkit-scrollbar {
    @include square-size(0.375em);
  }

  ::-webkit-scrollbar-track {
    background: rgb(0 0 0 / 10%);
  }

  ::-webkit-scrollbar-thumb {
    border-radius: 0.625em;
    background: rgb(0 0 0 / 20%);
  }

  ::-webkit-scrollbar-thumb:hover {
    background: rgb(0 0 0 / 40%);
  }

  ::-webkit-scrollbar-thumb:active {
    background: rgb(0 0 0 / 60%);
  }

  /** END  SCROLL BAR */
}
