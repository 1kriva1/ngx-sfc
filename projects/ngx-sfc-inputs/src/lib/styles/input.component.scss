@import "mixins";
@import "../../../../ngx-sfc-common/src/lib/styles/styles";

:host {
  width: 100%;

  .container {
    display: flex;
    justify-content: center;
    align-items: center;

    .icon {
      font-weight: normal;
      font-style: normal;
      line-height: 1;
      letter-spacing: normal;
      text-transform: none;
      display: inline-block;
      white-space: nowrap;
      word-wrap: normal;
      direction: ltr;
      -webkit-font-smoothing: antialiased;
      text-rendering: optimizelegibility;
      font-size: 1.3em;
      transition: color 0.2s;
      padding-right: 0.5em;
      cursor: pointer;

      @include theme-value(color, $color-default, $color-dark);

      &:hover {
        color: $color-hover-default;
      }
    }

    .content {
      width: 100%;
      position: relative;

      .sfc-input {
        background-color: transparent;

        @include border-bottom;
        @include theme-value(color, $color-default, $color-dark);

        outline: none;
        height: 2.4em;
        width: 100%;
        font-family: Arial, Helvetica, sans-serif;
        font-size: 0.8em;
        padding: 0;
        box-shadow: none;
        box-sizing: content-box;
        transition: border 0.3s, box-shadow 0.3s;
        transition: box-shadow 0.3s, border 0.3s;
        transition: box-shadow 0.3s, border 0.3s, box-shadow 0.3s;
        user-select: none;
      }

      label {
        @include theme-value(color, $color-default, $color-dark);

        position: absolute;
        top: 0;
        font-size: 0.8em;
        cursor: text;
        transition: color 0.2s ease-out, transform 0.2s ease-out;
        transition: transform 0.2s ease-out, color 0.2s ease-out;
        transition: transform 0.2s ease-out, color 0.2s ease-out, transform 0.2s ease-out;
        transform-origin: 0% 100%;
        text-align: initial;
        transform: translateY(0.6em);
        left: 0;
        user-select: none;
        white-space: break-spaces;

        &::after {
          display: block;
          content: "";
          position: absolute;
          top: 100%;
          left: 0;
          opacity: 0;
          transition: 0.2s opacity ease-out, 0.2s color ease-out;
        }

        &.active {
          transform: translateY(-0.9em) scale(0.8);
          transform-origin: 0 0;
          cursor: pointer;
        }
      }

      @include helper-text;
    }
  }

  /* PLACEHOLDER */

  ::placeholder {
    white-space: nowrap;

    @include theme-value(color, $color-5, $color-7);
  }

  /* END PLACEHOLDER */

  &.focus {
    .container {
      .icon {
        pointer-events: none;
        color: $color-hover-default;
      }

      .content {
        .sfc-input {
          @include focused-border-bottom;
        }

        label {
          color: $color-hover-default;
        }
      }
    }
  }

  &.disabled {
    .container {
      .icon {
        @include theme-value(color, $color-disabled-default, $color-disabled-dark);

        color: rgb(0 0 0 / 42%);
        pointer-events: none;
      }

      .content {
        .sfc-input {
          @include theme-value(color, $color-disabled-default, $color-disabled-dark);
          @include disabled-border-bottom;
        }

        label {
          pointer-events: none;

          @include theme-value(color, $color-disabled-default, $color-disabled-dark);
        }
      }
    }

    ::placeholder {
      @include theme-value(color, $color-disabled-default, $color-disabled-dark);
    }
  }

  @include invalid {
    .content {
      .sfc-input {
        border-bottom: 1px solid $color-failed;
        box-shadow: 0 1px 0 0 $color-failed;

        &:focus {
          border-bottom: 1px solid $color-failed;
          box-shadow: 0 1px 0 0 $color-failed;
        }
      }

      label,
      .helper-text {
        color: $color-failed !important;
      }
    }

    .icon {
      color: $color-failed;
    }
  }

  @include valid {
    .content {
      .sfc-input {
        border-bottom: 1px solid $color-success;
        box-shadow: 0 1px 0 0 $color-success;

        &:focus {
          border-bottom: 1px solid $color-success;
          box-shadow: 0 1px 0 0 $color-success;
        }
      }

      label,
      .helper-text {
        color: $color-success;
      }
    }

    .icon {
      color: $color-success;
    }
  }

  /**  SCROLL BAR */

  ::ng-deep ::-webkit-scrollbar {
    @include square-size(0.375em);
  }

  ::ng-deep ::-webkit-scrollbar-track {
    border-radius: 0.625em;
    background: rgb(0 0 0 / 10%);
  }

  ::ng-deep ::-webkit-scrollbar-thumb {
    border-radius: 0.625em;
    background: rgb(0 0 0 / 20%);
  }

  ::ng-deep ::-webkit-scrollbar-thumb:hover {
    background: rgb(0 0 0 / 40%);
  }

  ::ng-deep ::-webkit-scrollbar-thumb:active {
    background: rgb(0 0 0 / 60%);
  }

  /** END  SCROLL BAR */
}
